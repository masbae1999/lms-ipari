{"version":3,"sources":["../src/otherfields.js"],"names":["define","$","ajax","localCache","getFields","fieldid","deferred","Deferred","call","methodname","args","done","fieldinfo","resolve","fail","reject","promise"],"mappings":"AAsBAA,OAAM,wCAAC,CAAC,QAAD,CAAW,WAAX,CAAD,CAA0B,SAASC,CAAT,CAAYC,CAAZ,CAAkB,CAC9C,GAAIC,CAAAA,CAAU,CAAG,EAAjB,CAEA,MAAiE,CAU7DC,SAAS,CAAE,mBAASC,CAAT,CAAkB,CAEzB,GAAIC,CAAAA,CAAQ,CAAGL,CAAC,CAACM,QAAF,EAAf,CAEA,GAAmC,WAA/B,QAAOJ,CAAAA,CAAU,CAACE,CAAD,CAArB,CAAgD,CAC5CH,CAAI,CAACM,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,2CADL,CAEPC,IAAI,CAAE,CAACL,OAAO,CAAEA,CAAV,CAFC,CAGPM,IAAI,CAAE,cAASC,CAAT,CAAoB,CACtBT,CAAU,CAACE,CAAD,CAAV,CAAsBO,CAAtB,CACAN,CAAQ,CAACO,OAAT,CAAiBD,CAAjB,CACH,CANM,CAOPE,IAAI,CAAGR,CAAQ,CAACS,MAPT,CAAD,CAAV,CASH,CAVD,IAUO,CACHT,CAAQ,CAACO,OAAT,CAAiBV,CAAU,CAACE,CAAD,CAA3B,CACH,CAED,MAAOC,CAAAA,CAAQ,CAACU,OAAT,EACV,CA7B4D,CA+BpE,CAlCK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to get other profile fields.\n *\n * @module     profilefield_conditional/otherfields\n * @copyright  2016 Shamim Rezaie (http://foodle.org)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax'], function($, ajax) {\n    var localCache = [];\n\n    return /** @alias module:profilefield_conditional/otherfields */ {\n\n        /**\n         * Return a promise object that will be resolved into a string eventually (maybe immediately).\n         *\n         * @method getFields\n         * @param {Number} fieldid The field id\n         * @return [] {Promise}\n         */\n\n        getFields: function(fieldid) {\n\n            var deferred = $.Deferred();\n\n            if (typeof localCache[fieldid] === 'undefined') {\n                ajax.call([{\n                    methodname: 'profilefield_conditional_get_other_fields',\n                    args: {fieldid: fieldid},\n                    done: function(fieldinfo) {\n                        localCache[fieldid] = fieldinfo;\n                        deferred.resolve(fieldinfo);\n                    },\n                    fail: (deferred.reject)\n                }]);\n            } else {\n                deferred.resolve(localCache[fieldid]);\n            }\n\n            return deferred.promise();\n        }\n    };\n});\n"],"file":"otherfields.min.js"}